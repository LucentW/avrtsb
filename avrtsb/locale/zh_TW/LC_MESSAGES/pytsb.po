# Chinese (Traditional, Taiwan) translations for PyTSB.
# Copyright (C) 2015 ORGANIZATION
# This file is distributed under the same license as the PyTSB project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2015.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyTSB 0.1\n"
"Report-Msgid-Bugs-To: m.vyskoc@seznam.cz\n"
"POT-Creation-Date: 2015-04-29 18:28+0200\n"
"PO-Revision-Date: 2015-03-31 14:03+0200\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: zh_Hant_TW <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 1.3\n"

#: ../pytsb.py:37
msgid ""
"Console Tool for TinySafeBoot, the tiny and safe AVR bootloader.\n"
"----------------------------------------------------------------"
msgstr ""

#: ../pytsb.py:39
#, python-format
msgid ""
"For more information use:\n"
"  %(prog)s tsb --help\n"
"  %(prog)s fw --help\n"
"\n"
"EXAMPLES:\n"
"  Connect to TSB and show bootloader and device info\n"
"    %(prog)s tsb COM1 -i\n"
"\n"
"  Connection to TSB and write new firmware:\n"
"    %(prog)s tsb COM1 -fw my_program.hex -ew my_eeprom.hex\n"
"\n"
"  Get list of all supported devices for making firmware:\n"
"    %(prog)s tsb -d help\n"
"\n"
"  Make custom firmware for ATmega8 with serial interface RX=d0, TX=d1\n"
"    %(prog)s fw -d ATmega8 -pd0d1 -o tsb_ATmega8_d0d1.hex\n"
"\n"
msgstr ""

#: ../pytsb.py:60
msgid "Connect to bootloader"
msgstr ""

#: ../pytsb.py:64
msgid "Make custom TSB firmware"
msgstr ""

#: ../pytsb.py:69
msgid "Connection parameters"
msgstr ""

#: ../pytsb.py:71
#, python-format
msgid ""
"Device name of genuine or virtual serial port. Use %(prog)s help for list"
" of available devices"
msgstr ""

#: ../pytsb.py:74
msgid "Set the baudrate of the serial port. Default 9600 bps"
msgstr ""

#: ../pytsb.py:77
msgid "Password for accessing bootloader"
msgstr ""

#: ../pytsb.py:80
msgid ""
"Delay in ms after reset before TSB activation. Default value is 200 ms. "
"If you before set very low TIMOUT_FACTOR, you may need decrease this "
"value. Very low value cause troublebecause of AVR startup time."
msgstr ""

#: ../pytsb.py:87
msgid "Reset MCU with DTR line active in LEVEL. Default: --reset-dtr 1"
msgstr ""

#: ../pytsb.py:91
msgid "Reset MCU with RTS line active in LEVEL"
msgstr ""

#: ../pytsb.py:94
msgid "Show bootloader and device info"
msgstr ""

#: ../pytsb.py:97
msgid "TinySafeBoot settings"
msgstr ""

#: ../pytsb.py:100
msgid "Change password for activating TinySafeBoot loader."
msgstr ""

#: ../pytsb.py:104
msgid ""
"Change the time how long time the bootloader will wait for activation "
"before the downloaded firmware is started. The waiting time is given by "
"number in range 8..255 (approx 0.1 up to many seconds). The "
"TIMEOUT_FACTOR can be computed from give time in milliseconds and MCU "
"frequency in MHz or Hz."
msgstr ""

#: ../pytsb.py:111
msgid ""
"Emergency erase after lost password. Reset the contents of the flash ROM "
"and EEPROM to the value '0xff'. The bootloader is not deleted, only TSB "
"password is reset and TIMEOUT_FACTOR set to maximum value 255. Operation "
"is time demanding from 10 s up to 1 minute. "
msgstr ""

#: ../pytsb.py:117
msgid "FLASH programming"
msgstr ""

#: ../pytsb.py:120
msgid "Read flash ROM device memory and write to the specified file"
msgstr ""

#: ../pytsb.py:123
msgid "This will reset the content of the flash ROM to the value '0xff'"
msgstr ""

#: ../pytsb.py:127
msgid "Read the specified file and write it to the flash ROM device memory"
msgstr ""

#: ../pytsb.py:131
msgid ""
"Read the specified file and compare it with the flash ROM device memory. "
"When it is used with the option --flash-write than the FILENAME can be "
"omitted."
msgstr ""

#: ../pytsb.py:135
msgid "EEPROM programming"
msgstr ""

#: ../pytsb.py:138
msgid "Read EEPROM device memory and write to the specified file"
msgstr ""

#: ../pytsb.py:141
msgid "This will reset the content of the EEPROM to the value '0xff'"
msgstr ""

#: ../pytsb.py:145
msgid "Read the specified file and write it to the EEPROM device memory"
msgstr ""

#: ../pytsb.py:149
msgid ""
"Read the specified file and compare it with EEPROM device memory. When is"
" used with --eeprom-write option, the FILENAME can be omitted."
msgstr ""

#: ../pytsb.py:154
msgid ""
"Force to perform some danger operation: overwrite existing file or write "
"write new bootloader to the device flash ROM."
msgstr ""

#: ../pytsb.py:160
msgid ""
"Type of ATtiny/ATmega device for which the firmware will be made. For the"
" list of all supported devices use --device help"
msgstr ""

#: ../pytsb.py:165
msgid ""
"Port definition for serial communication. For example d0d1 means D0=RxD "
"and D1=TxD."
msgstr ""

#: ../pytsb.py:168
msgid ""
"Name of output file with generated firmware. File will be Hex (.hex) or "
"Binary (other extension)"
msgstr ""

#: ../pytsb.py:191
#, python-format
msgid "%(prog)s error: argument -b/--buadrate: invalid int value: '%s'"
msgstr ""

#: ../pytsb.py:199
#, python-format
msgid "%s: error: argument -fv/--flash-verify: expected 1 argument(s)\n"
msgstr ""

#: ../pytsb.py:200
msgid "Argument can be omitted only when is used with option --flash-write\n"
msgstr ""

#: ../pytsb.py:211
#, python-format
msgid "%s: error: argument -fv/--eeprom-verify: expected 1 argument(s)"
msgstr ""

#: ../pytsb.py:212
msgid "Argument can be omitted only when is used with option --eeprom-write"
msgstr ""

#: ../pytsb.py:221
#, python-format
msgid "%s: error: argument --change-timeout: expected 1 or 2 argument(s)"
msgstr ""

#: ../pytsb.py:271
msgid "Cannot access firmware database.\n"
msgstr ""

#: ../pytsb.py:281
msgid ""
"pytsb fw: error: argument -d/--device expected., Use --device help for "
"list of all supported devices.\n"
msgstr ""

#: ../pytsb.py:287
msgid "pytsb fw: error: argument -p/--rxtx expected.\n"
msgstr ""

#: ../pytsb.py:291
msgid ""
"pytsb fw: error: argument -p/--rxtx must be in the form d0d1, where D0 = "
"RxD, and D1=TxD.\n"
msgstr ""

#: ../pytsb.py:299
#, python-format
msgid "Output file '%s' already exist, do nothing.\n"
msgstr ""

#: ../pytsb.py:310
msgid "Try to use standard baudrate from the following list:"
msgstr ""

#: ../pytsb.py:332
msgid "List of available ports:"
msgstr ""

#: ../pytsb.py:334
#, python-format
msgid "  %-20s %s"
msgstr ""

#: ../pytsb.py:337
msgid "List of standard baudrates, not all of them must be supported:"
msgstr ""

#: ../pytsb.py:355 ../pytsb.py:406
#, python-format
msgid ""
"Error: output file \"%s\" already exist. Use --force option or delete the"
" existing file."
msgstr ""

#: ../pytsb.py:377
msgid "Flash ROM device memory"
msgstr ""

#: ../pytsb.py:382 ../pytsb.py:434
msgid "Data verification OK"
msgstr ""

#: ../pytsb.py:384
msgid "Flash ROM device verification error\n"
msgstr ""

#: ../pytsb.py:396
msgid ""
"Warning: firmware includes SPM instruction, which can be dangerous for "
"bootloader.\n"
"Use --force option if you really wish to write to device flash ROM."
msgstr ""

#: ../pytsb.py:399
msgid ""
"Firmware includes SPM instruction. Continue to write to the device flash "
"ROM --force option is used."
msgstr ""

#: ../pytsb.py:429
msgid "EEPROM device memory"
msgstr ""

#: ../pytsb.py:436
msgid "EEPROM verification error\n"
msgstr ""

#: ../pytsb.py:442
msgid "EEPROM Erase OK"
msgstr ""

#: ../pytsb.py:449
msgid "EEPROM Write OK"
msgstr ""

#: ../pytsb.py:456
#, python-format
msgid "Input file \"%s\" not found."
msgstr ""

#: ../pytsb.py:464
msgid ""
"Not supported file format. Only only Intel Hex (.HEX) or\n"
"raw binary files (.BIN) are supported."
msgstr ""

#: ../pytsb.py:493
msgid "Write user data OK"
msgstr ""

#: ../pytsb.py:494
#, python-format
msgid "Timeout factor %d"
msgstr ""

#: ../pytsb.py:495
#, python-format
msgid "Password: %s"
msgstr ""

#: ../pytsb.py:499
msgid "Emergency erase is takes from 10s up to 1 minute"
msgstr ""

#: ../pytsb.py:500
msgid "Please be patient"
msgstr ""

#: ../pytsb.py:506
msgid "Ressetting MCU, I try to access TSB without password."
msgstr ""

#: ../pytsb.py:519
msgid "List of all supported devices:"
msgstr ""

#: ../pytsb.py:527
#, python-format
msgid ""
"Sorry firmware is not supported for '%s'\n"
"."
msgstr ""

#: ../pytsb.py:535
#, python-format
msgid "Device '%s' doesn't support ports '%s'\n"
msgstr ""

#: ../pytsb.py:536
#, python-format
msgid "Supported ports are: %s\n"
msgstr ""

#: ../pytsb.py:545
#, python-format
msgid "TSB firmware saved to file: '%s'"
msgstr ""

#: ../tsbloader.py:57
msgid "Bad info data block received !"
msgstr ""

#: ../tsbloader.py:73
msgid "Pagesize not valid - abort."
msgstr ""

#: ../tsbloader.py:85
msgid "Error: Confirmation of header expected."
msgstr ""

#: ../tsbloader.py:114
msgid "Timeout factor must be in range 8..255"
msgstr ""

#: ../tsbloader.py:126
#, python-format
msgid "Maximum lenght of password is %d"
msgstr ""

#: ../tsbloader.py:135
msgid "TINY SAFE BOOTLOADER"
msgstr ""

#: ../tsbloader.py:136
#, python-format
msgid "VERSION   : %d"
msgstr ""

#: ../tsbloader.py:137
#, python-format
msgid "STATUS    : %X"
msgstr ""

#: ../tsbloader.py:138
#, python-format
msgid "SIGNATURE : %.2X %.2X %.2X"
msgstr ""

#: ../tsbloader.py:139
#, python-format
msgid "DEVICE    : %s"
msgstr ""

#: ../tsbloader.py:140
#, python-format
msgid "FLASH     : %d"
msgstr ""

#: ../tsbloader.py:141
#, python-format
msgid "APPFLASH  : %d"
msgstr ""

#: ../tsbloader.py:142
#, python-format
msgid "PAGESIZE  : %d"
msgstr ""

#: ../tsbloader.py:143
#, python-format
msgid "EEPROM    : %d"
msgstr ""

#: ../tsbloader.py:144
#, python-format
msgid "APPJUMP   : %.4X"
msgstr ""

#: ../tsbloader.py:145
#, python-format
msgid "TIMEOUT   : %d"
msgstr ""

#: ../tsbloader.py:186
msgid "reset_line attribute can have only TSBLoader.DTR, TSBLoader.RTS value."
msgstr ""

#: ../tsbloader.py:197
msgid "reset_active attribute can have only values only 0, 1"
msgstr ""

#: ../tsbloader.py:270
msgid "Timeout error - TSB does not respond"
msgstr ""

#: ../tsbloader.py:272
msgid "Comunication error: invalid answer from TSB"
msgstr ""

#: ../tsbloader.py:281
msgid "User data read error."
msgstr ""

#: ../tsbloader.py:297
msgid "User data write error."
msgstr ""

#: ../tsbloader.py:307 ../tsbloader.py:480
msgid "One-wire interface detected."
msgstr ""

#: ../tsbloader.py:314
msgid "Error: Device does not respond."
msgstr ""

#: ../tsbloader.py:316
msgid " Please check your password."
msgstr ""

#: ../tsbloader.py:318
msgid " Maybe password is required."
msgstr ""

#: ../tsbloader.py:348
msgid "Read flash memory page error."
msgstr ""

#: ../tsbloader.py:351
#, python-format
msgid "Flash read %.4X"
msgstr ""

#: ../tsbloader.py:355
msgid "Read Error: other memory page expected."
msgstr ""

#: ../tsbloader.py:372
msgid "Error: Not enough space."
msgstr ""

#: ../tsbloader.py:385
#, python-format
msgid "Flash write %.4X"
msgstr ""

#: ../tsbloader.py:394
msgid "Error: end of appflash reached or verifying error"
msgstr ""

#: ../tsbloader.py:396
msgid "FLASH Write: Undefined error."
msgstr ""

#: ../tsbloader.py:410
msgid "Error: EEPROM not enough space."
msgstr ""

#: ../tsbloader.py:422
#, python-format
msgid "EEPROM write %.4X"
msgstr ""

#: ../tsbloader.py:432
msgid "Error: end of eeprom reached or verifying error"
msgstr ""

#: ../tsbloader.py:434
msgid "EEPROM Write: Undefined error."
msgstr ""

#: ../tsbloader.py:454
msgid "Read EEPROM memory page error."
msgstr ""

#: ../tsbloader.py:457
#, python-format
msgid "EEPROM read %.4X"
msgstr ""

#: ../tsbloader.py:461
msgid "Read Error: other EEPROM page expected."
msgstr ""

#: ../tsbloader.py:483
msgid "TSB is accessible without password. "
msgstr ""

